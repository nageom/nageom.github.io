<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://nageom.github.io/tag/blockchain/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://nageom.github.io/" rel="alternate" type="text/html" />
  <updated>2021-11-02T20:18:55+09:00</updated>
  <id>https://nageom.github.io/tag/blockchain/feed.xml</id>

  
  
  

  
    <title type="html">nageom’s blog | </title>
  

  
    <subtitle>티끌모아 공부방</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">블록체인의 시작(5)_블록체인 이해하기</title>
      <link href="https://nageom.github.io/blockchain-start(5)" rel="alternate" type="text/html" title="블록체인의 시작(5)_블록체인 이해하기" />
      <published>2021-11-02T09:00:00+09:00</published>
      <updated>2021-11-02T09:00:00+09:00</updated>
      <id>https://nageom.github.io/blockchain-start(5)</id>
      <content type="html" xml:base="https://nageom.github.io/blockchain-start(5)">&lt;hr /&gt;
&lt;p&gt;블록체인은 대충 알겠고 그래서 코드는 어떻게 쓰는데? &lt;br /&gt;
해서 냅다 니콜라스의 도움으로 typescript로 간단 블록체인 구조를 생성해보았다.&lt;/p&gt;

&lt;p&gt;일단 왜 타입스크립트를 사용? 
자바스크립트가 갖고있지 않는 규칙을 가지고 있다. 
-&amp;gt; 대형 프로젝트, 팀으로 일할 경우 버그를 최소화하기 좋다
-&amp;gt; 언어가 예측 가능하고 읽기 쉬운 코드로 자바스크립트를 더 잘 사용할 수 있게 해준다.&lt;/p&gt;

&lt;p&gt;Yarn 은 프로젝트의 의존성을 관리하는 JavaScript의 패키지 매니저&lt;br /&gt;
= Java의 gradle&lt;/p&gt;

&lt;p&gt;npm 보다 빠르고 안전하며 npm과 같이 자바스크립트 패키지의 저장소를 제공할 뿐만 아니라
시스템에서 의존 패키지 설치하거나 업데이트하는 등의 다양한 명령을 제공, package.json을 통해 의존 패키지를 구분한다.&lt;/p&gt;

&lt;p&gt;하지만 나는 yarn 이 돌아가지 않아서 npm을 사용했다. &lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;yarn initialize &lt;br /&gt;
(&amp;gt; yarn init) 또는 
(&amp;gt;npm init ) &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;타임스크립트 설치  &lt;br /&gt;
(&amp;gt; yarn global add typescript) 
또는
(&amp;gt; npm install typescript)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.일단 냅다 블록 구조 만들기&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previouHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;previousHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2.블록 생성과 블록체인배열 생성 시험&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//블록 생성&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;genesisBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;202020202020&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 블록 배열 생성 &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;blockchain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;genesisBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;지난번 블록 설명 포스팅에서 블록의 이름 블록해시는 블록이 가진 여러요소들의 합을 SHA256으로 변환한 값이라고 했다.&lt;br /&gt;
3.그럼 해시값을 만들어볼까나!&lt;br /&gt;
 crypto-js 설치부터!&lt;br /&gt;
(&amp;gt; yarn add crypto-js 또는 npm install crypto-js)&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//import 추가&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CryptoJS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;crypto-js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//블록 클래스 안에 블록해시를 만드는 static calculateBlockHash 함수 추가  &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;calculateBlockHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;CryptoJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SHA256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//블록생성하는 함수 생성 &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createNewBlock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;previousBlock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getLatesBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;newIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;newTimestamp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getNewTimeStamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;newHash&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;calculateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;newIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;previousBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;newTimestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;newBlock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;newIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
     &lt;span class=&quot;nx&quot;&gt;newHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
     &lt;span class=&quot;nx&quot;&gt;previous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;newTimestamp&lt;/span&gt; 
   &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;addBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//블록체인에 블록 추가 --아래에 추가되있음&lt;/span&gt;
   
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 블록을 검증하는 절차를 거쳐야지.&lt;br /&gt;
4.구조와 해시값을 검증한다.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//블록의 구조 검증 메서드 (블록 클래스 내에 추가) &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;validateStructure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;typeoff&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;//블록해시 값이 맞는지 확인하는 메서드 &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getHashforBlock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;calculateBlockHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;aBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//블록의 해쉬가 유효한가 , 따로 해쉬를 계산해서, 들어온 블록의 해쉬가 실제로 있는지 체크&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;5.위 두 검증을 거치는 isBlockValid 메서드 생성&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//candidate 블럭과 previous 블럭을 비교 &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isBlockValid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;candidateBlock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;previousBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validateStructure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;candidateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//구조 검증 &lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;candidateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//인덱스 검증 &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;candidateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;previousHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// preHash 검증&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getHahforBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;candidateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;candidateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 현 블록해시 검증 &lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//블록의 해쉬가 유효한가 , 따로 해쉬를 계산해서, 들어온 블록의 해쉬가 실제로 있는지 체크&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;6.createNewBlock 에서 사용할 블록체인에 블록 추가하기 메서드&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addBlock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;condidateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isBlockValid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;candidateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getLastBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;blockchain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;candidateBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;실행&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;createNewBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;첫 블록&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;createNewBlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;아더 블록&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;포스팅을 마치며&lt;br /&gt;
타임스크립트는 처음 사용해봤는데 나는 자바 유저인데도
사용할만했다. 이로써 블록체인의 구조는 대강 알겠다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>nageom</name>
        
        
      </author>

      

      
        <category term="blockchain" />
      

      
        <summary type="html">블록체인은 대충 알겠고 그래서 코드는 어떻게 쓰는데? 해서 냅다 니콜라스의 도움으로 typescript로 간단 블록체인 구조를 생성해보았다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">블록체인의 시작(4)_디파이</title>
      <link href="https://nageom.github.io/blockchain-start(4)" rel="alternate" type="text/html" title="블록체인의 시작(4)_디파이" />
      <published>2021-11-01T09:00:00+09:00</published>
      <updated>2021-11-01T09:00:00+09:00</updated>
      <id>https://nageom.github.io/blockchain-start(4)</id>
      <content type="html" xml:base="https://nageom.github.io/blockchain-start(4)">&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;디파이와 서비스&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;1. 디파이(De-fi)란?&lt;/strong&gt;&lt;br /&gt;
탈중앙화 금융(Decentralized Finance)의 약자로서, 탈중앙화된 분산금융 또는 분산재정을 의미한다. 
탈중앙화는 저번 포스팅에서 설명했고, 은행처럼 예치, 대출이 가능하지만 실제화폐가 아닌
암호화폐로 거래된다는 점이 다르다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.디파이 서비스&lt;/strong&gt;&lt;br /&gt;
탈중앙화 금융서비스는 무엇을 제공할까? &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;암호화폐 예치와 대출&lt;br /&gt;
테더를 예치한 A와, 이더리움을 담보로 테더 대출하려는 B가 있다. (이때 대출받는 측(B)의 이자와 수수료가 투자자(A)에게 수익으로 작용된다.)
가치 변동성이 적은 코인을 팔지않고 예치함으로써 B의 대출이자와 수수료로 수익을 보는 A &lt;br /&gt;
변동성이 큰 코인(이더)를 팔고싶지않을때 이더를 담보로 테더를 대출 받을 수 있는 B&lt;br /&gt;
모두에게 이득이다.&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;자산토큰화&lt;br /&gt;
개인투자자들도 고가의 부동산이나 예슬품에 쉽게 투자할 수 있도록 자산 소유권을 소액으로 나누는 것을 말한다. 
여러 개로 나눠진 소유권을 블록체인 기술로 암호화하여 저장하는 것을 토큰화, 이를 자산토큰화라고 한다. &lt;br /&gt;&lt;br /&gt;
예시로 100억원 상당의 빌딩을 5000원의 부동산 디지털 수익증권으로 200만여개로 나누어 공모를 진행한다. 
개인 투자자는 원하는 만큼의 디지털 수익증권을 살 수 있다. 
이걸 삼으로써 임대료를 받거나 매각할 때 시세차익을 벌 수 있고
또는 차익이 벌어질때 보유한 수익증권을 마켓플레이스에서 매매할 수 있다. &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;스테이킹&lt;br /&gt;
스테이킹(staking)은 암호화폐의 일정량을 지분으로 고정시키는 행위이다. &lt;br /&gt;
스테이킹 서비스란 저축과 유사한 개념으로 사용자가 가진 암호화폐를 블록체인 네트워크 운영에 활용할 수 있도록 맡기고, 그 대가로 수익 보상을 받는 서비스다.
일반 예치와 다른점이 바로
예치만 하는 것이 아니라 데이터 검증에 참여하여 암호화폐를 보상받는 점이다. 
이 절차를 복잡하게 느끼는 일반투자자들을 위해 전문적으로 스테이킹과 데이터 검증을 하는 서비스를 제공하는 업체도 등장했다. &lt;br /&gt;
(대표적으로 스테이크드, 스테이크피쉬, 업비트 등이 있다)&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;덱스 거래&lt;br /&gt;
덱스 = (Decentralized Exchange) 탈중앙화 거래소&lt;br /&gt;
덱스 거래 = 탈중앙화 환전, 스왑&lt;br /&gt;&lt;br /&gt;
원화와 달러를 환전함을 생각하면되는데 사실 덱스 거래는 많이 다르다. 
기존에 은행이 달러나 원화를 어느정도 보유하고 있는 방식이 아니라 투자자가 예치한 암호화폐들로 환전이 이루어지는 방식이다. &lt;br /&gt;&lt;br /&gt;
물론 투자자들의 모든 예치금을 말하는것은 아니고 사용자에게 여러 암호화폐로 환전할 수 있도록 만들어진 유동성 풀을 제공하고
암호화폐 투자자들이 서로 다른 암호화폐 둘을 1대1비율로 예치합니다. &lt;br /&gt;&lt;br /&gt;
이 유동성풀에 있는 암호화폐로 사용자에게 환전서비스를 제공합니다. 이때 환전 서비스를 스왑이라하고
스왑시 발생하는 수수료를 위의 암호화폐 투자자들에게 배분합니다.&lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>nageom</name>
        
        
      </author>

      

      
        <category term="blockchain" />
      

      
        <summary type="html">디파이와 서비스</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">블록체인의 시작(2)_스마트컨트랙트</title>
      <link href="https://nageom.github.io/blockchain-start(2)" rel="alternate" type="text/html" title="블록체인의 시작(2)_스마트컨트랙트" />
      <published>2021-10-31T09:00:00+09:00</published>
      <updated>2021-10-31T09:00:00+09:00</updated>
      <id>https://nageom.github.io/blockchain-start(2)</id>
      <content type="html" xml:base="https://nageom.github.io/blockchain-start(2)">&lt;hr /&gt;
&lt;p&gt;스마트컨트랙트는 블록체인 위에 올리는 코드이다.&lt;/p&gt;

&lt;p&gt;본래는 코드대로 실행되는 계약 시스템이였지만 블록체인에 도입됨으로써 취약했던 보안과 신뢰를 보완하여 세상에 나왔다.&lt;/p&gt;

&lt;p&gt;스마트컨트랙트의 사전의미는 계약 당사자가 사전에 협의한 내용을 미리 프로그래밍하여 전자계약서 문서 안에 넣어두고,
이 계약 조건이 모두 충족되면 자동으로 계약 내용이 실행되도록 하는 시스템이다. 라고한다.&lt;/p&gt;

&lt;p&gt;단순단순히 &lt;u&gt;~할 경우 ~한다.&lt;/u&gt; 라는 코드로 볼 수 있다.
내가 봤을때 코드, 계약대로 실행되는 자동화 시스템을 말하는 것 같다. 계약이니 양방향의 동의를 얻은!&lt;/p&gt;

&lt;p&gt;한 예시로, 사업을 시작하기위해 투자를 받고 있는 예비 사업자가 있다고 하면 목표 금액을 채우지 못했을시에 사업자는 사업을 시작하지 못하고
투자자들은 돈을 돌려받지 못하는 경우의 부담감으로 투자를 주저한다.&lt;/p&gt;

&lt;p&gt;이때 목표액 이더리움 천 개를 채우지 못하면 투자 금액을 모두 돌려준다는 계약조건을 건다.&lt;br /&gt;
계약대로 투자금을 모으는 기간 동안은 지갑이 락이 걸려 출금이 금지되고 
기간이 끝나고 개수를 채우지 못했을 때
자동적으로 투자자들의 투자금이 그대로 돌려받게 되는 계약을 이행하는 것이 스마트 컨트랙트이다.&lt;/p&gt;

&lt;p&gt;지금의 은행자동이체 또한 스마트컨트랙트와 같다. 
지금의 자동이체는 은행이 주체이지만 블록체인 위의 스마트컨트랙트는 주체가 모두가 됨으로써 이의 보안이 더욱 올라간다는 장점이 있다.&lt;/p&gt;

&lt;p&gt;이제 스마트컨트랙트? 조건을 붙여 자동실행 되도록 하는 계약이고 코드! Um~ 느낌이 왔다면&lt;/p&gt;

&lt;p&gt;그럼 다음은 ERC20에 대해 알아보자.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>nageom</name>
        
        
      </author>

      

      
        <category term="blockchain" />
      

      
        <summary type="html">스마트컨트랙트는 블록체인 위에 올리는 코드이다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">블록체인의 시작(1)_개념</title>
      <link href="https://nageom.github.io/blockchain-start(1)" rel="alternate" type="text/html" title="블록체인의 시작(1)_개념" />
      <published>2021-10-31T09:00:00+09:00</published>
      <updated>2021-10-31T09:00:00+09:00</updated>
      <id>https://nageom.github.io/blockchain-start(1)</id>
      <content type="html" xml:base="https://nageom.github.io/blockchain-start(1)">&lt;hr /&gt;
&lt;p&gt;블록체인을 좀 쉽고 빠르게 습득하기 위한 포스팅. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 블록체인을 공부할 때에는 읽어도 정말 읽어도 몰랐다 &lt;br /&gt;
순서대로 했다면 이해가 더 쉬웠겠다라고 느꼈던 그대로 &lt;br /&gt;
기초부터 정리해봤다. &lt;br /&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;블록체인이란?&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;블록은?&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;블록체인 : 말그대로 블록이 체인 형태로 이어져있는 형태. 개발자에게겐 노드가 체인처럼 쭉 연결되어 있는셈. 
왜 여기저기에서 블록체인 이야기가 들릴까?
그건 블록체인이 디지털 데이터를 신뢰할 수 있게 만들어준 기술이기 때문이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/built/images/blockchain/blockchain.png&quot; alt=&quot;ex_screenshot&quot; /&gt;
 블록체인은 탈중앙화(decentralization)기술이다.  &lt;br /&gt;
우리는 입출금을 하기 위해서 은행을 이용한다. 나의 계좌내역은 당연히 은행이 관리한다.
내가 친구에게 돈을 송금한 것은 은행이 증언해준다. 이렇게 어떠한 정보나 권한이 한 곳에 집중되어있는 기존방식의
보안은 은행에 집중되어있고 그만큼 해킹의 주 타겟이 된다.&lt;/p&gt;

&lt;p&gt;반대로 블록체인은 정보나 권한이 분배되어 분산되어있는 방식을 갖는다. 
내 거래내역이 은행창고에만 있는 것이 아니라 모두가 소유함으로써, 
내 거래내역을 가진 모두가 증인이며 증거가 된다.&lt;/p&gt;

&lt;p&gt;더 쉽게 생각하면, 사탕을 은행에 숨기던 방식  - 은행이 강도당하면 내 사탕도 사라짐&lt;br /&gt;
사탕을 내 이름을 적어서 사거리 신호등에 둔다 - 모두가 감시자이자 목격자. 안정성이 보장된다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;은행의 데이터를 조작해서 송금 내역에 변화를 줄 수 있다면
블록체인에 올라와있는 &lt;u&gt;블록은 수정,삭제가 불가능한 형태이다.&lt;/u&gt; (아래 설명)&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그럼 블록을 알아보자. &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;블록은 ? 개발자는 노드를 상상하면 이해가 쉽다. &lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/built/images/blockchain/blockchain2.png&quot; alt=&quot;ex_screenshot&quot; /&gt;
&lt;strong&gt;블록의 구조&lt;/strong&gt;부터 보자. 
블록은 데이터를 저장하는 단위로 블록헤더와 블록바디로 나누어져서 &lt;br /&gt;
블록헤더에는 버전, 이전 블록해시, 머클루트, 타임, 난이도 목표, 논스(nounce, 암호화와 관련되는 임의의 수) &lt;br /&gt;
블록바디에는 트랜잭션들(거래내용)이 담아져있다. &lt;br /&gt; 
트랜잭션에 많은 거래내역이 담겨있다. 일정한 시간동안의 거래내역이 한 블록에 담긴다.(약 10분이며, 코인마다 다름 )&lt;/p&gt;

&lt;p&gt;주목해야하는 부분은 블록해시이다. 이는 블록의 주소이자 이름이라 할 수 있다. 
블록은 이전 블록해시를 갖음으로써 서로 연결된 형태의 블록체인이 완성된다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 위에서 말한 &lt;u&gt;블록체인의 블록은 수정, 삭제가 불가능한 형태&lt;/u&gt;라 한 이유가 이제 나온다.&lt;br /&gt;
블록해시란&lt;br /&gt;
블록헤더의 정보들(버전, 이전 블록해시, 머클루트, 타임, 난이도 목표, 논스)을 모두 합산한 후 SHA256으로 변환하여 만드는 해시 값이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;즉, A-B-C-D-E 로 이루어진 블록체인의 B.블록의 데이터를 수정하면 그 뒤의 C의 이전 해시값이 바뀌고 C의 해시값 또한 변경되고 D, E 의 해시값 
또한 변화가 있게된다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;블록체인은 서로가 감시자인 형태로 블록의 정보를 모두 공유한다. 여기에 해당되는 ‘모두’의 과반수가 갖는 정보를 신뢰하는 형태를 띄기 때문에
수정을 위해서는 이 과반수가 가진 C,D,E 블록의 해시값을 손봐야한다. 이는 천문학적인 시간과 머니가 들어 불가능에 가깝다!&lt;/p&gt;

&lt;p&gt;이로써 블록체인은 보안을 유지할 수 있다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;블록체인은 새로운 신뢰/보안의 형태이다. 이제 시작이고 가야할 길이 멀고도 험하다 
 ERC20? 토큰이랑 코인? 스마트컨트랙트? 블록체인을 공부하면서 어려웠던 이것들 모두 짚고 넘어가보자.&lt;/p&gt;

&lt;p&gt;다음은 스마트컨트랙트에 대해 알아볼거다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>nageom</name>
        
        
      </author>

      

      
        <category term="blockchain" />
      

      
        <summary type="html">블록체인을 좀 쉽고 빠르게 습득하기 위한 포스팅.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">블록체인의 시작(4)_ERC20토큰과 스마트컨트랙트, Dapp</title>
      <link href="https://nageom.github.io/blockchain-start(3)" rel="alternate" type="text/html" title="블록체인의 시작(4)_ERC20토큰과 스마트컨트랙트, Dapp" />
      <published>2021-10-31T09:00:00+09:00</published>
      <updated>2021-10-31T09:00:00+09:00</updated>
      <id>https://nageom.github.io/blockchain-start(3)</id>
      <content type="html" xml:base="https://nageom.github.io/blockchain-start(3)">&lt;hr /&gt;
&lt;ol&gt;
  &lt;li&gt;코인과 토큰의 차이.&lt;/li&gt;
  &lt;li&gt;ERC20?&lt;/li&gt;
  &lt;li&gt;Dapp(디앱)??&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;1. 코인과 토큰의 차이.&lt;/strong&gt;&lt;br /&gt;
코인은 자체적인 블록체인 네트워크를 가지고 웅용되어 지는 것
토큰은 코인의 기존 블록체인 네트워크를 차용해서 운용되어 지는 것이다. 
대표적인 비트코인, 이더리움 등을 제외한 대부분은 토큰이다. (이더리움의 코인 이름은 이더..!)&lt;/p&gt;

&lt;p&gt;그렇다고 영원히 토큰이냐? 그것도 아닙니다. 메인넷이라고 기존에 존재하는 플랫폼에 종속 되어있지 않고
독립적으로 생태계를 구성하는 것이 있습니다.
토큰에서 코인이 되는 과정 &lt;br /&gt;
기존 블록체인 네트워크를 기반으로 토큰을 제작하고, ICO(initial coin offering) 들을 통해 대중에게 알립니다.
(ICO: 백서를 공개한 후 신규 암호화폐를 발행해 투자자들로부터 사업 자금을 모집하는 방식)
이후 테스트넷으로 실제 실행이 잘되는지 확인하는 과정을 거쳐 이가 성공하면 메인넷이 릴리즈 된다.
독립적인 플랫폼으로 거래하고 생태계 구성이 된다는 것이다. 이게 토큰에서 코인으로 업그레이드가 되는 과정이다.
예) 이오스토큰 -&amp;gt; 이오스 코인&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.이제 ERC20이 무엇인가&lt;/strong&gt;&lt;br /&gt;
이더리움의 자체 블록체인 네트워크 상에서 발행되는 &lt;u&gt;토큰의 호환성을 보장&lt;/u&gt;하기 위한 표준 사양을 말합니다. 
위의 정의처럼 토큰은 블록체인 네트워크를 빌려 만들어진 것이잖아요? 만들때 최소한의 조건이 ERC20인거죠.&lt;br /&gt;
그래서 ERC20의 표준 사양을 맞춘 토큰을 ERC20토큰이라 부릅니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Dapp(디앱)??&lt;/strong&gt;
디앱이란 블록체인을 기반으로 돌아가는 애플리케이션을 말한다.
모바일의 OS 안드로이드와 iOS 처럼 블록체인계의 OS에서 돌아가는 애플리케이션.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/built/images/blockchain/blockchain3.png&quot; alt=&quot;ex_screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;디앱은 블록체인에서 스마트 계약이 도입되면서 생겨났다(이더리움이 처음 도입). 스마트 계약이 없는 비트코인에는 디앱이 존재하지 않는다.
스마트컨트랙트가 포함된 블록체인 네트워크 위에서 돌아가는 어플리케이션이라 정리할 수 있다. 
예를 들자면 배달의 민족 어플에 만약 30분 안에 배달이 완료되면 자동 결제가 되는 스마트컨트랙트를 추가한다면 Dapp이라 할 수 있다.
이처럼 디앱의 종류는 코인관련 뿐만 아니라 안드로이드의 앱처럼 모든 앱이 될 수 있다.&lt;/p&gt;

&lt;p&gt;현재 여러 블록체인 플랫폼들이 있는데 대표주자가 이더리움이다. 처음 블록체인에 스마트 계약을 도입하며
디앱을 탄생시킨게 이더리움이기도하고 디앱 수로 봤을때도 1위가 이더리움, 2위는 이오스. 그 수가 
이더리움이 2,341개이상, 이오스는 235개로 차이가 엄청나다.&lt;/p&gt;

&lt;p&gt;대표적인 이더리움 블록체인에서는 이더(ETH)가 사용되고, 이더리움 블록체인 상의 Dapp(디앱)은
또 다른 다양한 분야에 적용될 수 있는 각각의 솔루션으로 그에 맞는 토큰을 발행하는 것이다.&lt;/p&gt;

&lt;p&gt;본래 각각의 앱을 사용하면서 발생되는 일정부분의 포인트를 통합하여 사용하는 것은 같은 회사계열의 앱이 아닌 이상 거의 불가능하지만 
이더리움 플랫폼에서는 각각의 디앱이 발행한 토큰을 통합하여 현금화하는 것이 가능하다.
다양한 디앱에 흩어져있는 ERC-20 표준 호환 토큰들이 나중에 통합이 가능하여 한 번에 이더로 모두 바꾸고 현금화 할 수 있는것이다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>nageom</name>
        
        
      </author>

      

      
        <category term="blockchain" />
      

      
        <summary type="html">코인과 토큰의 차이. ERC20? Dapp(디앱)??</summary>
      

      
      
    </entry>
  
</feed>
